        Ctl-opt option(*srcstmt:*nodebugio);                       
        Ctl-opt dftactgrp(*no) actgrp(*caller);                    
        Dcl-s MessageText varchar(32740);                          
        Dcl-s MessageLength int(5);                                
        Dcl-s ResponseMsg Varchar(9999);                           
        Dcl-s ResponseHeader Varchar(1000);                        
        Dcl-s ResponsePos Packed(4);                               
        Dcl-s ReturnedSQLCode char(5);                             
        Dcl-s header Char(200);                                    
        Dcl-c Url const('https://gorest.co.in/public-api/users');  
        Dcl-pr system zoned(10:0) extproc('system');               
          szcmd pointer Value Options(*String);                    
        End-pr;                                                    
                                                                   
 *********OPEN_DECLARATION*********                                
D Open            pr            10I 0 ExtProc('open')              
D                                 *   VALUE OPTIONS(*STRING)       
D                               10I 0 VALUE                        
D                               10U 0 VALUE OPTIONS(*NOPASS)       
D                               10I 0 VALUE OPTIONS(*NOPASS)        
 *********WRITE_DECLARATION********                                 
D WRITE           pr            10I 0 ExtProc('write')              
D                               10I 0 VALUE                         
D                                 *   VALUE                         
D                               10U 0 VALUE                         
 *********CLOSE_DECLARATION********                                 
D CLOSE           pr            10I 0 ExtProc('close')              
D                               10I 0 VALUE                         
 *********FILE_CREATION_MODE*******                                 
D IFS_WRITE       C                   2                             
D IFS_RDWRT       C                   4                             
D IFS_CREATE      C                   8                             
D IFS_CLEAR       C                   64                            
D IFS_APPEND      C                   256                           
 *********lOCAL_FEILDS*************                                 
D FD              S             10I 0                               
D FD1             S             10I 0                               
************************************************************        
        // MainLine                                                 
***********************************************                     
        Exec sql set option commit = *none;                         
        Exec sql CALL QSYS2.QCMDEXC('CHGJOB CCSID(37)');            
        header =                                                    
        '<httpHeader>' +                                            
        '<header name="Content-Type" value="text/plain">'+          
        '</header>' +                                               
        '</httpHeader>';                                            
        Exec sql Select Coalesce(Varchar(ResponseMsg,9999),' '),    
        Varchar(ResponseHttpHeader,1000) into :ResponseMsg,         
        :ResponseHeader                                             
        From                                                        
        Table(Systools.HttpGetClobVerbose(Trim(:Url),               
        Trim(:header)))                                             
        as                                                          
        InternalServices;                                           
        Diagnostics();                                              
        If ReturnedSqlCode = *Blanks;                               
          dsply 'Response from get';
        Else;                                                          
          dsply 'Error';                                               
        EndIf;                                                         
                                                                       
    FD = OPEN('/TMP/TMP.TXT'                                           
               : Ifs_create+Ifs_write+Ifs_clear                        
               : (256+128) + (32+16) + (4+2));                         
    If fd < 0;                                                         
      Dsply 'Error';                                                   
    Else;                                                              
      callp write(fd:%addr(ResponseMsg): %len(%trimr(ResponseMsg)));   
      callp close(fd);                                                 
    EndIf;                                                             
    *inlr = *on;                                                       
    FD1 = OPEN('/TMP/TMP1.TXT'                                         
               : Ifs_create+Ifs_write+Ifs_clear                        
               : (256+128) + (32+16) + (4+2));                         
    If fd1 < 0;                                                        
      Dsply 'Error';                                                   
    Else;                                                              
      callp write(fd:%addr(ResponseHeader): %len(%trimr(ResponseHeader))); 
      callp close(fd1);                                                    
    EndIf;                                                                 
    Return;                                                                
*******************************************************                    
          // Diagnostics - get sql details                                 
*******************************************************                    
          Dcl-proc Diagnostics ;                                           
            Exec sql GET DIAGNOSTICS CONDITION 1                           
            :ReturnedSqlCode = DB2_RETURNED_SQLCODE,                       
            :MessageLength = MESSAGE_LENGTH,                               
            :MessageText = MESSAGE_TEXT;                                   
          End-proc ;                                                       
        
        
